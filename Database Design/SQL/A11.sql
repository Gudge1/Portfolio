--70
ALTER TABLE VIDEO 
ADD VID_STATUS VARCHAR(4) NOT NULL DEFAULT 'IN'

ALTER TABLE VIDEO
ADD CONSTRAINT CHECK_VID_STATUS CHECK (VID_STATUS IN ('IN', 'OUT', 'LOST'))

--71
UPDATE VIDEO
SET VID_STATUS = 'OUT'
FROM VIDEO V INNER JOIN DETAILRENTAL D ON V.VID_NUM = D.VID_NUM
WHERE DETAIL_RETURNDATE IS NULL

--72
ALTER TABLE PRICE 
ADD PRICE_RENTDAYS NUMERIC(2) NOT NULL DEFAULT 3

--73
UPDATE PRICE 
SET PRICE_RENTDAYS = 
CASE WHEN PRICE_CODE = 1 THEN 5 
	 WHEN PRICE_CODE = 2 THEN 3 
	 WHEN PRICE_CODE = 3 THEN 5 
	 WHEN PRICE_CODE = 4 THEN 7 END 

--78
CREATE PROCEDURE PRC_NEW_DETAIL (

	@VID_NUM INT,
	@RENT_NUM INT )

AS
BEGIN
	
	DECLARE @RENT_FEE DECIMAL
	DECLARE @DAILY_FEE DECIMAL
	DECLARE @RENT_DAYS INT
	DECLARE @DUE_DATE DATE
	

   IF @VID_NUM IN (SELECT VID_NUM FROM VIDEO WHERE VID_STATUS = 'IN') 
	BEGIN
	SET @RENT_FEE = (SELECT PRICE_RENTFEE
					 FROM PRICE P INNER JOIN MOVIE M ON P.PRICE_CODE = M.PRICE_CODE
					 INNER JOIN VIDEO V ON V.MOVIE_NUM = M.MOVIE_NUM
					 WHERE V.VID_NUM = @VID_NUM)

	SET @DAILY_FEE = (SELECT @DAILY_FEE
					  FROM PRICE P INNER JOIN MOVIE M ON P.PRICE_CODE = M.PRICE_CODE
					  INNER JOIN VIDEO V ON V.MOVIE_NUM = M.MOVIE_NUM
					  WHERE V.VID_NUM = @VID_NUM)

	SELECT @DUE_DATE = GETDATE() + @RENT_DAYS 
					

	INSERT INTO DETAILRENTAL
	SELECT @RENT_NUM, @VID_NUM, @RENT_FEE, @DUE_DATE, NULL, @DAILY_FEE
	END

	ELSE
	PRINT 'VIDEO NUMBER IS NOT IN THE DATABASE'
END

--79
CREATE PROCEDURE PRC_RETURN_VIDEO (

	@VID_NUM INT )

AS
BEGIN

	IF EXISTS (SELECT VID_NUM FROM VIDEO WHERE @VID_NUM = VID_NUM)
	BEGIN
		IF ((SELECT COUNT(VID_NUM) FROM DETAILRENTAL WHERE @VID_NUM = VID_NUM AND DETAIL_DUEDATE IS NULL) = 1)
		BEGIN 
			UPDATE VIDEO 
			SET VID_STATUS = 'IN', VID_INDATE = SYSDATETIME()
			WHERE VID_NUM = @VID_NUM

			PRINT 'VIDEO HAS BEEN RETURNED AND IS NOW AVAILABLE FOR RENTAL'
		END
		ELSE IF ((SELECT COUNT(VID_NUM) FROM DETAILRENTAL WHERE @VID_NUM = VID_NUM) >1)
		BEGIN
		 PRINT 'VIDEO HAS MULTIPLE OUTSTANDING RENTALS'
		END
		ELSE
		BEGIN
			UPDATE VIDEO
			SET VID_STATUS = 'IN'
			WHERE VID_NUM = @VID_NUM
			
			PRINT 'VIDEO HAS NO OUTSTANDING RENTALS BUT IS NOW AVAILABLE TO RENT'
		END
	END
	ELSE PRINT 'VIDEO WAS NOT FOUND'
 END
	
		
SELECT *
FROM DETAILRENTAL
SELECT * FROM VIDEO
SELECT * FROM PRICE 